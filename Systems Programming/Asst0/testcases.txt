1. 
./a.out "Monkey see, monkey do."
word: "Monkey"
word: "see"
comma: ","
word: "monkey"
word: "do"
structure member: "."

2.
./a.out "Abc123 baby u & me!"
word: "Abc123"
word: "baby"
word: "u"
AND/address operator: "&"
word: "me"
negate: "!"

3.
./a.out "0x3A6 + 06 = ?"
hexadecimal integer: "0x3A6"
addition: "+"
octal integer: "06"
assignment: "="
coditional true: "?"

4.
./a.out "4.2 x4.2 0x4.2 40x2.x"
floating point: "4.2"
word: "x4"
structure member: "."
decimal integer: "2"
hexadecimal integer: "0x4"
structure member: "."
decimal integer: "2"
decimal integer: "40"
word: "x2"
structure member: "."
word: "x"

5.
./a.out "1.22434e-8 is ^^ (BIG NUMB3R)"
floating point: "1.22434e-8"
word: "is"
bitwise XOR: "^"
bitwise XOR: "^"
left parenthesis: "("
word: "BIG"
word: "NUMB3R"
right parenthesis: ")"

6.
./a.out "test: +++ += &&& | :\ | ~ | ;) |"
word: "test"
conditional false: ":"
increment: "++"
addition: "+"
plus equals: "+="
logical AND: "&&"
AND/address operator: "&"
bitwise OR: "|"
conditional false: ":"
unknown character: "\"
bitwise OR: "|"
1s complement: "~"
bitwise OR: "|"
bitwise OR: ";"
right parenthesis: ")"
bitwise OR: "|"

7.
./a.out "0XXX *nope >> 0XAA *yep"
hexadecimal integer: "0X"
word: "XX"
multiply/dereference operator: "*"
word: "nope"
shift right: ">>"
hexadecimal integer: "0XAA"
multiply/dereference operator: "*"
word: "yep"

8. 
./a.out "rocket >>=>, ladder |=|, [tire == 2.12]"
word: "rocket"
shift right equals: ">>="
greater than test: ">"
comma: ","
word: "ladder"
bitwise OR equals: "|="
bitwise OR: "|"
comma: ","
left bracket: "["
word: "cucumb3r"
equality: "=="
floating point: "2.12"
right bracket: "]"
